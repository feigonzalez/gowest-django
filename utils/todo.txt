[X] not allow duplicate users
    detects if a signing-up user exists already. use MESSAGES to relay this to the user
[X] implement cart
[X] formValidation.js/validateLogin()
[X] change recoverPass to use email instead of rut
[X] recover password
[X] url protection
[X] modify product (and other tables)
    the view "edit" button calls modals.js's prepareXModal(), and loads the correct data into the modal.
    the modal's form then calls view's postX, which handles creation and updating of elements.
[X] modify category
[X] show client data
[X] show if client is subscribed (use external API)
[X] show sale data
[X] delete product (and other tables)
    deleteAlertModal.js has a form, whose input values are changed by modals.js
    depending on which confirmDeleteX() function was called.
    views.py's confirmDeletion() has a sequence of if statements, where the specified item gets deleted
[X] delete category
[X] delete admin
[X] search query product
[X] search query category
[X] search query client
[X] search query sales
[X] search query admin
[X] let admin confirm sale shipment
[X] modify account data
[X] modify account password
[X] modify account sec question
[X] let client see purchases
[X] let client see addresses
[X] let client edit addresses
[X] let client delete addresses
	does not delete. instead, it is set to "not active" in the db.
	this allows to keep the data related to the sales made with that address
[X] let client create new address
[X] let client subscribe to foundation (use external API)
[X] let client confirm purchase reception
[X] prevent user from deleting their last address

[X] add admin-view edit button on product view. open adminProduct with corresponding edit modal open
[X] add admin-view edit button on gallery for category. open adminCategory with corresponding edit modal open

[X] change settings.py's DATABASES's NAME from "xe" to "orcl" (for assignment)
[ ] change settings.py's DATABASES's NAME from "orcl" to "xe" (during development on home PC)
	
[ ] make upload file
	[X] add sql script
	[X] installation instructions txt (include install django, pillow, etc)
	[X] DB model
	[ ] django app source code
	[X] ERS documentation (?)
	[X] Gantt chart